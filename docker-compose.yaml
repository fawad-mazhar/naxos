# docker-compose.yaml
# ====================================== NAXOS ENVIRONMENT =======================================
x-naxos-environment: &naxos_environment
  # # Mandatory Environment Variables
  - NAXOS_POSTGRES_URL=postgresql://naxos:naxos123@postgres:5432/naxos?sslmode=disable
  - NAXOS_RABBITMQ_URL=amqp://naxos:naxos123@rabbitmq:5672/
  # # Optional Server Configuration
  # - NAXOS_SERVER_PORT="8080"              # defaults to 8080
  # - NAXOS_SERVER_READ_TIMEOUT="30"        # defaults to 30
  # - NAXOS_SERVER_WRITE_TIMEOUT="30"       # defaults to 30

  # # Optional RabbitMQ Configuration
  # - NAXOS_RABBITMQ_EXCHANGE="naxos"             # defaults to "naxos"
  # - NAXOS_RABBITMQ_JOBS_QUEUE="naxos.jobs"      # defaults to "naxos.jobs"
  # - NAXOS_RABBITMQ_STATUS_QUEUE="naxos.status"  # defaults to "naxos.status"
  # - NAXOS_RABBITMQ_EXCHANGE_TYPE="direct"       # defaults to "direct"

  # # Optional LevelDB Configuration
  # - NAXOS_LEVELDB_PATH="./data/leveldb"   # defaults to "./data/leveldb"

  # # Optional Worker Configuration
  # - NAXOS_WORKER_MAX_WORKERS="10"         # defaults to 10
  # - NAXOS_WORKER_MAX_RETRIES="3"          # defaults to 3
  # - NAXOS_WORKER_RETRY_DELAY="5"          # defaults to 5
  # - NAXOS_WORKER_SHUTDOWN_TIMEOUT="30"    # defaults to 30

x-naxos-image: &naxos_image naxos:latest
x-naxos-build: &naxos_build .
# ====================================== NAXOS ENVIRONMENT ======================================
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: naxos
      POSTGRES_PASSWORD: naxos123
      POSTGRES_DB: naxos
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    networks:
      - naxos
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U naxos"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: naxos
      RABBITMQ_DEFAULT_PASS: naxos123
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - naxos
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: *naxos_image
    build: *naxos_build
    environment: *naxos_environment
    ports:
      - "8080:8080"
    command: /app/api
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - naxos

  runner1:
    image: *naxos_image
    build: *naxos_build
    environment: *naxos_environment
    command: /app/runner
    volumes:
      - leveldb_data1:/app/data/leveldb
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - naxos

  runner2:
    image: *naxos_image
    build: *naxos_build
    environment: *naxos_environment
    command: /app/runner
    volumes:
      - leveldb_data2:/app/data/leveldb
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - naxos

volumes:
  postgres_data:
  leveldb_data1:
  leveldb_data2:

networks:
  naxos:
