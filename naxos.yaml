# naxos.yaml - Configuration file for Naxos Job Orchestration System

# API Server Configuration
server:
  port: "8080"              # Port for the HTTP API server
  readTimeout: 30           # HTTP read timeout in seconds
  writeTimeout: 30          # HTTP write timeout in seconds

# PostgreSQL Database Configuration
postgres:
  host: "postgres"          # Database hostname (service name in docker-compose)
  port: 5432               # PostgreSQL default port
  user: "naxos"            # Database user
  password: "naxos123"     # Database password
  dbname: "naxos"          # Database name
  sslmode: "disable"       # SSL mode for database connection

# RabbitMQ Message Queue Configuration
rabbitmq:
  url: "amqp://naxos:naxos123@rabbitmq:5672/"  # RabbitMQ connection URL
  exchange: "naxos"        # Exchange name for message routing
  jobsQueue: "naxos.jobs"  # Queue for job execution messages
  statusQueue: "naxos.status"  # Queue for status updates (system events, health checks)
  exchangeType: "direct"   # Exchange type for message routing

# LevelDB Configuration (Local Cache)
leveldb:
  path: "./data/leveldb"   # Path for LevelDB storage files (cached job definitions)

# Worker Configuration
worker:
  maxWorkers: 10           # Maximum number of concurrent workers
  maxRetries: 3            # Default retry attempts for failed tasks
  retryDelay: 5           # Initial delay between retries in seconds
  shutdownTimeout: 30      # Timeout for graceful shutdown in seconds

# Job Definitions
job_definitions:
  # Sequential Task Chain Example
  - id: "sample-1"                   # Unique identifier for the job
    name: "Sequential Task Chain"     # Human-readable name
    tasks:
      task1:
        id: "task1"
        name: "First Task"
        maxRetry: 3                  # Maximum retry attempts for this task
        functionName: "Task1"        # Maps to Task1 function in worker package
      task2:
        id: "task2"
        name: "Second Task"
        maxRetry: 2
        functionName: "Task2"
      task3:
        id: "task3"
        name: "Third Task"
        maxRetry: 1
        functionName: "Task3"
    graph:                          # Task dependency graph
      task1: []                     # No dependencies
      task2: ["task1"]             # Depends on task1
      task3: ["task2"]             # Depends on task2

  # Parallel Task Execution Example
  - id: "sample-2"
    name: "Parallel Task Execution"
    tasks:
      task1:
        id: "task1"
        name: "Initial Task"
        maxRetry: 3
        functionName: "Task1"
      task2:
        id: "task2"
        name: "Parallel Task A"
        maxRetry: 2
        functionName: "Task2"
      task3:
        id: "task3"
        name: "Parallel Task B"
        maxRetry: 2
        functionName: "Task3"
      task4:
        id: "task4"
        name: "Final Task"
        maxRetry: 1
        functionName: "Task4"
    graph:
      task1: []                     # Starts first
      task2: ["task1"]             # Depends on task1
      task3: ["task1"]             # Depends on task1 (parallel with task2)
      task4: ["task2", "task3"]    # Depends on both task2 and task3